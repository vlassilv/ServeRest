<h1> AUTOMAÇÃO DE TESTES E2E - CYPRESS - SERVEREST </h1>
</div>

## PRÉ-REQUISITOS
Requisitos de software necessários para executar este projeto de automação

* [Node.JS](https://nodejs.org/pt/ "Node.JS")
* [Cypress](https://www.cypress.io/ "Cypress")
* [VSCode](https://code.visualstudio.com/)

## CONFIGURAÇÃO

Passo 1: Configurar o Cypress

1. Instalação do Cypress: Primeiro, crie um diretório para o seu projeto e inicie um novo projeto Node.js.
```sh default
mkdir meu-projeto-cypress
cd meu-projeto-cypress
npm init -y
npm install cypress --save-dev
```

2. Abrir o Cypress: Após a instalação, você pode abrir o Cypress pela primeira vez para que ele crie a estrutura inicial de pastas.
```sh default
npx cypress open
```

Isso criará uma pasta chamada cypress com subpastas como fixtures, integration, plugins e support.

## ESTRUTURA DO PROJETO

SERVEREST/
├── cypress/
│   ├── e2e/
│   │   └── login.spec.cy.js
│   ├── support/
│   │   ├── pages
│   │   │   └── LoginPage.js
│   │   ├── commands.js
│   │   ├── e2e.js
├── node_modules
├── screenshort
├── secrets
├── videos
├── .gitignore
├── cypress.config.js
├── package-lock.json
├── package.json
└── readme

Descrição das Pastas e Arquivos

1. cypress/: Diretório principal onde todos os arquivos e configurações do Cypress estão localizados.

e2e/: Pasta onde os arquivos de testes são armazenados. Cada arquivo é geralmente organizado por funcionalidade ou por página da aplicação. Exemplo: login.spec.js é o arquivo de teste de login.


support/:
    /pages: onde são definidos os métodos que serão chamados nos respectivos arquivos de testes.
    commands.js: onde são definidos comandos personalizados para o Cypress.
    index.js: Arquivo de configuração principal de suporte. Útil para definir configurações globais ou importar comandos personalizados.
videos/: Cypress gera vídeos dos testes por padrão quando executa os testes com o comando cypress run. Esta pasta é criada automaticamente quando os testes são executados.

2. cypress.json: Arquivo de configuração principal do Cypress.

/*
const { defineConfig } = require('cypress');

module.exports = defineConfig({
  e2e: {
    baseUrl: 'https://front.serverest.dev/login', 
  },
});
*/

3. package.json: Arquivo padrão do Node.js, onde as dependências do projeto, como o Cypress, são listadas.


{
  "name": "serverest",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "Valmir Santos",
  "license": "ISC",
  "description": "Automação de Teste E2E - ServeRest",
  "devDependencies": {
    "cypress": "^13.15.0"
  }
}

4. node_modules/: Diretório gerado automaticamente pelo npm, onde todas as dependências e bibliotecas necessárias são armazenadas. Não deve modificar ou criar manualmente este diretório.

## CENÁRIOS DOS TESTES

CT01: Login usuário válido

CT02: Login usuário inválido

CT03: Pesquisar produto
Produto: Bike Gorgeous 30171

## EXECUÇÃO DOS TESTES

Os testes podem ser executados de duas maneiras:

- Abrir o Cypress GUI:
```sh default
npx cypress open
```

- Rodar testes em modo headless (sem interface gráfica):
```sh default
npx cypress run
```

## EVIDÊNCIAS
Os arquivos com as evidências ficam localizados nas pastas cypress/screenshort e cypress/videos do projeto, nestas pastas se encontram os prints e vídeos evidênciando a execução.







